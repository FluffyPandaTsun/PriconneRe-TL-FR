name: Create new release
on:
  workflow_dispatch:
    inputs:
      release_note_smallnote:
        type: string
        description: Small note above download button
        required: false
      release_note_download:
        type: boolean
        description: Show download button
        required: true
        default: true
      release_note_changelog:
        type: boolean
        description: Show changelog
        required: true
        default: true
      release_note_compare:
        type: boolean
        description: Show compare link
        required: true
        default: true
      test_mode:
        type: boolean
        description: Test mode
        required: true
        default: false

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Windows release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Preparing
        run: |
          & .\.github\scripts\initialize.ps1

      - name: Add small note
        if: inputs.release_note_smallnote
        run: |
          "${{ inputs.release_note_smallnote }}" >> "./RELEASE_NOTE"

      - name: Create download button
        if: inputs.release_note_download
        run: |
          #"`r`n# Download`r`n" >> "./RELEASE_NOTE"
          #"Choose a version:`r`n" >> "./RELEASE_NOTE"
          "|[Download](https://github.com/ImaterialC/PriconneRe-TL/releases/download/${{ env.RELEASE_TAG }}/PriconneTL_${{ env.RELEASE_TAG }}.zip)|`r`n|-|" >> "./RELEASE_NOTE"
          Write-Output "::group::Release Note"
          Get-Content -Raw "./RELEASE_NOTE"
          Write-Output "::endgroup::"

      - name: Generating changelog
        if: inputs.release_note_changelog
        run: |
          & .\.github\scripts\make_changelog.ps1

      - name: Create compare link
        if: inputs.release_note_compare
        run: |
          "`r`n**Full Changelog:** https://github.com/ImaterialC/PriconneRe-TL/compare/$(git describe --tags --abbrev=0)...${{ env.RELEASE_TAG }}" >> ./RELEASE_NOTE

      - name: Generating artifact
        run: |
          $Version = Get-Content "src/BepInEx/Translation/en/Text/Version.txt"
          Set-Content -Path "src/BepInEx/Translation/en/Text/Version.txt" -Value $Version.Replace("Pre-release", "${{ env.RELEASE_TAG }}")
          Write-Output "Generated Version file"
          Compress-Archive -Path "src/*" -DestinationPath 'PriconneTL_${{ env.RELEASE_TAG }}.zip'
          Get-Item "PriconneTL_${{ env.RELEASE_TAG }}.zip" -ErrorAction Stop

      - name: Publish Release
        if: inputs.test_mode == false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create `
            --latest `
            --notes-file RELEASE_NOTE `
            --title "${{ env.RELEASE_TITLE }}"`
            ${{ env.RELEASE_TAG }} `
            PriconneTL_${{ env.RELEASE_TAG }}.zip `
