name: Create new release
on:
  workflow_dispatch:
    inputs:
      release_note_download:
        type: boolean
        description: Show download button
        required: true
        default: true
      release_note_changelog:
        type: boolean
        description: Show changelog
        required: true
        default: false
      release_note_compare:
        type: boolean
        description: Show compare link
        required: true
        default: true

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Windows release
    runs-on: windows-latest
    concurrency: staging_environment
    outputs:
      changes: ${{ steps.changes.outputs.discord_changes }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Preparing
        run: |
          $Date = Get-Date -Format 'yyyy.MM.dd'
          $DateWithoutDot = $Date.Replace(".","")
          $charNumber = 64
          do {
            $char = [char]$charNumber
            if ($charNumber -eq 64) {
              $ReleaseTag = $DateWithoutDot
            }
            else {
              $ReleaseTag = $DateWithoutDot + $char.ToString().ToLower()
            }
            $charNumber++
          }
          while (git tag -l $ReleaseTag)
          $ReleaseTitle = "Pricone UI EN DMM v$Date$($char.ToString().ToLower())"

          "RELEASE_TAG=$ReleaseTag" >> $Env:GITHUB_ENV
          "RELEASE_TITLE=$ReleaseTitle" >> $Env:GITHUB_ENV

          Write-Output "::group::Logs"
          Write-Output "Tag: $ReleaseTag"
          Write-Output "::endgroup::"

      - name: Create download button
        if: inputs.release_note_download
        run: |
          #"`n# Download`n" >> "./RELEASE_NOTE"
          #"Choose a version:`n" >> "./RELEASE_NOTE"
          "|[Download](https://github.com/ImaterialC/PriconneRe-TL/releases/download/${{ env.RELEASE_TAG }}/PriconneTL_${{ env.RELEASE_TAG }}.zip)|`n|-|" >> "./RELEASE_NOTE"
          Write-Output "::group::Release Note"
          Get-Content -Raw "./RELEASE_NOTE"
          Write-Output "::endgroup::"

      - name: Generating changelog
        if: inputs.release_note_changelog
        run: |
          & .\.github\scripts\make_changelog.ps1

      - name: Generating changelog in Discord format
        id: changes
        run: |
          & .\.github\scripts\make_announce.ps1
          Add-Content -Value "`n[Download here](https://github.com/ImaterialC/PriconneRe-TL/releases/download/${{ env.RELEASE_TAG }}/PriconneTL_${{ env.RELEASE_TAG }}.zip)" -Path "./DISCORD_NOTE"
          "discord_changes<<EOF" >> "$env:GITHUB_OUTPUT"
          Get-Content -Raw "./DISCORD_NOTE" >> "$env:GITHUB_OUTPUT"
          "EOF" >> "$env:GITHUB_OUTPUT"

      - name: Create compare link
        if: inputs.release_note_compare
        run: |
          "`n**Full Changelog:** https://github.com/ImaterialC/PriconneRe-TL/compare/$(git describe --tags --abbrev=0)...${{ env.RELEASE_TAG }}" >> ./RELEASE_NOTE

      - name: Generating artifact
        run: |
          $WshShell = New-Object -comObject WScript.Shell
          $Shortcut = $WshShell.CreateShortcut("src\ReTL_Updater.lnk")
          $Shortcut.TargetPath = "powershell.exe"
          $Shortcut.Arguments = "irm https://bit.ly/3RjFnwE | iex"
          $Shortcut.Save()
          $Version = Get-Content "src/BepInEx/Translation/en/Text/Version.txt"
          Set-Content -Path "src/BepInEx/Translation/en/Text/Version.txt" -Value $Version.Replace("Pre-release", "${{ env.RELEASE_TAG }}")
          Write-Output "Generated Version file"
          Compress-Archive -Path "src/*" -DestinationPath 'PriconneTL_${{ env.RELEASE_TAG }}.zip'
          Get-Item "PriconneTL_${{ env.RELEASE_TAG }}.zip" -ErrorAction Stop

      - name: Publish Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create `
            --latest `
            --notes-file RELEASE_NOTE `
            --title ${{ env.RELEASE_TITLE }}`
            ${{ env.RELEASE_TAG }} `
            PriconneTL_${{ env.RELEASE_TAG }}.zip `

  announce:
    name: Discord Announcement
    runs-on: ubuntu-latest
    concurrency: staging_environment
    needs: build
    steps:
      - name: Announcing new release
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@0c4b27844ba47cb1c7bee539c8eead5284ce9fa9
        with:
          args: "<@&1082514350700515348> Aruji-sama, look like there is a new update dropped, why don't we check it out?\n${{ needs.build.outputs.changes }}\n"
